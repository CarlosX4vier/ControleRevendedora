// <auto-generated />
using System;
using ControleRevendedora.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleRevendedora.Migrations
{
    [DbContext(typeof(RevendedoraContext))]
    [Migration("20211208021618_ALTER_TABLE_PRODUTOES")]
    partial class ALTER_TABLE_PRODUTOES
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ControleRevendedora.Modelos.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("ControleRevendedora.Modelos.ProdutoBase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CodigoBarras")
                        .HasColumnType("bigint");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Imagem")
                        .HasColumnType("longtext");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Produtos", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProdutoBase");
                });

            modelBuilder.Entity("ControleRevendedora.Modelos.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("ProdutoID")
                        .HasColumnType("bigint");

                    b.Property<float>("ValorEntrada")
                        .HasColumnType("float");

                    b.Property<float?>("ValorSaida")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoID");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("KitProduto", b =>
                {
                    b.Property<long>("KitProdutosId")
                        .HasColumnType("bigint");

                    b.Property<long>("KitsId")
                        .HasColumnType("bigint");

                    b.HasKey("KitProdutosId", "KitsId");

                    b.HasIndex("KitsId");

                    b.ToTable("KitProduto");
                });

            modelBuilder.Entity("ControleRevendedora.Modelos.Kit", b =>
                {
                    b.HasBaseType("ControleRevendedora.Modelos.ProdutoBase");

                    b.HasDiscriminator().HasValue("Kit");
                });

            modelBuilder.Entity("ControleRevendedora.Modelos.Produto", b =>
                {
                    b.HasBaseType("ControleRevendedora.Modelos.ProdutoBase");

                    b.HasDiscriminator().HasValue("Produto");
                });

            modelBuilder.Entity("ControleRevendedora.Modelos.ProdutoBase", b =>
                {
                    b.HasOne("ControleRevendedora.Modelos.Marca", "Marca")
                        .WithMany("Produtos")
                        .HasForeignKey("MarcaId");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("ControleRevendedora.Modelos.Transacao", b =>
                {
                    b.HasOne("ControleRevendedora.Modelos.ProdutoBase", "Produto")
                        .WithMany("Transacoes")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("KitProduto", b =>
                {
                    b.HasOne("ControleRevendedora.Modelos.Produto", null)
                        .WithMany()
                        .HasForeignKey("KitProdutosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleRevendedora.Modelos.Kit", null)
                        .WithMany()
                        .HasForeignKey("KitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ControleRevendedora.Modelos.Marca", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("ControleRevendedora.Modelos.ProdutoBase", b =>
                {
                    b.Navigation("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
